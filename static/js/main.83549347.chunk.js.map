{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","term","setTerm","formula","setFormula","equation","setEquation","formulaScreen","document","getElementById","operatorsArr","isTermOperator","find","operator","digitLimitMet","innerHTML","setTimeout","addDigits","e","style","opacity","target","id","className","termArr","i","length","push","some","num","formulaArr","mutableArr","splice","join","clear","useEffect","addEventListener","removeEventListener","getAns","pop","displayEquation","mutableFormulaArr","formulaEquation","String","eval","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.83549347.chunk.js","sourcesContent":["/* eslint-disable no-eval */\nimport './App.scss';\nimport { useState, useEffect } from 'react'\n\nfunction App() {\n\n  const [term, setTerm] = useState(\"0\")\n\n  const [formula, setFormula] = useState(\"0\")\n\n  const [equation, setEquation] = useState(false)\n\n\n  const formulaScreen = document.getElementById(\"formula\")\n\n  const operatorsArr = [\"+\", \"*\", \"/\", \"-\"];\n\n  const isTermOperator = operatorsArr.find(operator => operator === term)\n\n\n\n  const digitLimitMet = () => {\n\n      document.getElementById(\"term\").innerHTML = (\"DIGIT LIMIT MET\")\n\n      setTimeout(function() {\n\n      document.getElementById(\"term\").innerHTML = term\n\n    }, 500);\n\n}\n\n\n\n  const addDigits = (e) => {\n\n    if (formulaScreen) {\n\n     formulaScreen.style.opacity = 1\n\n    }\n\n    if (equation) {\n\n      if (e.target.id === \"point\") {\n\n        setFormula(\"0.\")\n        setTerm(\"0.\")\n\n      } else if (e.target.className === \"numbers\") {\n\n        setFormula(e.target.innerHTML)\n        setTerm(e.target.innerHTML)\n\n      } else if (e.target.className === \"operators\") {\n\n        setFormula(term + e.target.innerHTML)\n        setTerm(e.target.innerHTML)\n\n      } \n\n      setEquation(!equation)\n\n\n    } else if (term === \"0\") {\n\n      document.getElementById(\"formula\").style.opacity = 1\n\n      if (e.target.id === \"point\") {\n\n        setFormula(formula + \".\")\n        setTerm(term + \".\")\n\n      } else if (e.target.className === \"numbers\") {\n\n        if (e.target.id === \"zero\") {\n\n          setFormula(formula)\n          setTerm(term)\n\n        } else {\n\n          setFormula(e.target.innerHTML)\n          setTerm(e.target.innerHTML)\n\n        }\n        \n\n      } else if (e.target.className === \"operators\") {\n\n        setFormula(formula + e.target.innerHTML)\n        setTerm(e.target.innerHTML)\n\n      } \n\n    } else {\n\n      if (e.target.id === \"point\") {\n\n        let termArr = [];\n        for (let i = 0; i < term.length; i++) {\n          termArr.push(term[i])\n        }\n\n        const decimalPoint = (num) => num === '.';\n\n        if (term.length === 22) {\n\n          digitLimitMet();\n\n        } else if (!termArr.some(decimalPoint)) {\n\n          setFormula(formula + e.target.innerHTML)\n          setTerm(term + e.target.innerHTML)\n\n        } else {\n\n          setFormula(formula)\n          setTerm(term)\n\n        }\n\n      } else if (e.target.className === \"numbers\") {\n\n        if (term.length === 22) {\n\n          digitLimitMet();\n\n        } else if (isTermOperator) {\n\n          setFormula(formula + e.target.innerHTML)\n          setTerm(e.target.innerHTML)\n\n        } else {\n\n          setFormula(formula + e.target.innerHTML)\n          setTerm(term + e.target.innerHTML)\n\n        }    \n\n      } else if (e.target.className === \"operators\") {\n\n        let formulaArr = [];\n        for (let i = 0; i < formula.length; i++) {\n\n          formulaArr.push(formula[i])\n\n        }\n\n        let mutableArr = [...formulaArr]\n\n        if (isTermOperator) {\n\n          if (e.target.id === \"minus\") {\n\n            if (operatorsArr.find(operator => operator === (formulaArr[formulaArr.length - 2]))) {\n\n              setFormula(formula)\n              setTerm(term)\n\n            } else {\n\n              setFormula(formula + e.target.innerHTML)\n              setTerm(e.target.innerHTML)\n\n            }\n\n          } else {\n\n            if (operatorsArr.find(operator => operator === (formulaArr[formulaArr.length - 2]))) {\n\n              mutableArr.splice(-2, 2, e.target.innerHTML)\n              setFormula(mutableArr.join(\"\"))\n              setTerm(e.target.innerHTML)\n\n            } else {\n\n              mutableArr[mutableArr.length - 1] = e.target.innerHTML\n\n              setFormula(mutableArr.join(\"\"))\n              setTerm(e.target.innerHTML)\n\n            }\n\n          }\n\n\n\n        } else {\n\n          setFormula(formula + e.target.innerHTML)\n          setTerm(e.target.innerHTML)\n\n        }\n\n      }\n\n    }\n\n  }\n\n  const clear = () => {\n\n    setFormula(\"0\")\n    setTerm(\"0\")\n    document.getElementById(\"formula\").style.opacity = 0;\n\n  }\n\n  useEffect(() => {\n\n    document.getElementById(\"ac\").addEventListener(\"click\", clear)\n\n    return () => {\n\n      document.getElementById(\"ac\").removeEventListener(\"click\", clear)\n\n    }\n\n  })\n\n\n  const getAns = (e) => {\n\n    if (!equation) {\n\n        let formulaArr = [];\n\n        for (let i = 0; i < formula.length; i++) {\n\n          formulaArr.push(formula[i])\n\n        }\n\n        if (operatorsArr.find(operator => operator === formulaArr[formulaArr.length - 1])) {\n\n          if (operatorsArr.find(operator => operator === formulaArr[formulaArr.length - 2])) {\n\n          formulaArr.pop()\n          formulaArr.pop()\n\n          } else {\n\n            formulaArr.pop()\n\n          }  \n\n          let displayEquation = formulaArr.join(\"\")\n          let mutableFormulaArr = [...formulaArr]\n\n\n          for (let i = 0; i < formulaArr.length; i++) {\n\n            if (formulaArr[i] === \"-\" && formulaArr[i + 1] === \"-\") {\n\n              mutableFormulaArr.splice(i, 2, \"+\")\n\n            }\n\n          }\n\n          let formulaEquation = mutableFormulaArr.join(\"\")\n          \n          setFormula(`${displayEquation} = ${String(eval(formulaEquation))}`)\n          setTerm(String(eval(formulaEquation)))\n           \n        } else {\n\n          for (let i = 0; i < formulaArr.length; i++) {\n\n            if (formulaArr[i] === \"-\" && formulaArr[i + 1] === \"-\") {\n\n              formulaArr.splice(i, 2, \"+\")\n\n            }\n\n          }\n\n          let formulaEquation = formulaArr.join(\"\")\n\n          setFormula(`${formula} = ${String(eval(formulaEquation))}`)\n          setTerm(String(eval(formulaEquation)))\n\n        }\n\n      \n      setEquation(!equation)\n\n    }\n\n  }\n\n  useEffect(() => {\n\n    document.getElementById(\"equal\").addEventListener(\"click\", getAns)\n\n    return () => {\n\n      document.getElementById(\"equal\").removeEventListener(\"click\", getAns)\n\n    }\n\n  })\n\n  return (\n    <>\n      <div id=\"container\">\n        <div id=\"calculator\">\n          <div id=\"screen\">\n            <div id=\"formula\">{formula}</div>\n            <div id=\"term\">{term}</div>\n          </div>\n          <div id=\"buttons-wrapper\">\n            <button                                            id=\"ac\">AC</button>\n            <button onClick={addDigits} className=\"operators\"  id=\"divide\">/</button>\n            <button onClick={addDigits} className=\"operators\"  id=\"multiply\">*</button>\n            <button onClick={addDigits} className=\"numbers\"    id=\"7\">7</button>\n            <button onClick={addDigits} className=\"numbers\"    id=\"8\">8</button>\n            <button onClick={addDigits} className=\"numbers\"    id=\"9\">9</button>\n            <button onClick={addDigits} className=\"operators\"  id=\"minus\">-</button>\n            <button onClick={addDigits} className=\"numbers\"    id=\"4\">4</button>\n            <button onClick={addDigits} className=\"numbers\"    id=\"5\">5</button>\n            <button onClick={addDigits} className=\"numbers\"    id=\"6\">6</button>\n            <button onClick={addDigits} className=\"operators\"  id=\"add\">+</button>\n            <button onClick={addDigits} className=\"numbers\"    id=\"1\">1</button>\n            <button onClick={addDigits} className=\"numbers\"    id=\"2\">2</button>\n            <button onClick={addDigits} className=\"numbers\"    id=\"3\">3</button>\n            <button                                            id=\"equal\">=</button>\n            <button onClick={addDigits} className=\"numbers\"    id=\"zero\">0</button>\n            <button onClick={addDigits} className=\"numbers\"    id=\"point\">.</button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}